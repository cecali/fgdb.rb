<% update_display = remote_function(
     :update => searchbox_display_id(options),
     :url => options.merge({
       :action => 'update_display_area',
       :controller => 'contacts',
     }),
     :with => "'contact_id=' + $('#{contact_element_prefix(options)}_query').value"
   ) %>
<% update_display_function = "
     function(field, choice) {
       #{update_display};
     }" %>
<%= hidden_field_tag "contact_element_prefix", contact_element_prefix(options) %>
<label for="<%= contact_element_prefix(options) -%>_query">Search for a contact:</label>
<%= text_field_with_auto_complete(
      contact_element_prefix(options),
      'query',
      {},
      {
        :after_update_element => update_display_function,
        :skip_style => true
      },
      :controller => 'contacts'
    ) %>
<% if (! options[:display_create]) or (options[:display_create] == 'true') %>
  <% new_options = options.merge(
       :controller => 'contacts',
       :action => 'new',
       :id => nil,
       :loading_indicator_prefix => contact_element_prefix(options) + '_new'
     ) %>
  <a href="<%= url_for(new_options) %>" id="<%= contact_new_contact_link(options) %>" class="lightwindow"
       params="lightwindow_type=page" onclick="return false">
     <%= image_tag "add.gif", :alt => "Create a new contact", :title => "Create a new contact" %>
  </a>
  <%= loading_indicator_tag(new_options) %>
<% end %>
<div id="<%= searchbox_display_id(options) %>"></div>

<% if instance_variable_get("@" + contact_element_prefix(options)) %>
  <%= javascript_tag "set_new_val($('#{contact_element_prefix(options)}_query'), '#{instance_variable_get("@" + contact_element_prefix(options)).contact.id}');" %>
  <%= javascript_tag update_display %>
<% end %>
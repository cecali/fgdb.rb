<% if @show_wrapper %>
<div id="<%= @transaction_type %>">
  <div id="<%= component_id(params) %>">
<% end %>

<div class="footer">
  <td class="indicator-container">
    <%= loading_indicator_tag("#{@transaction_type}_footer_loading") %>
  </td>

  <table class="list">
    <tbody>
      <%= render :partial => 'column_headings' %>
    </tbody>
    <tbody id="<%= tbody_id(params) %>">
      <tr></tr>
      <% if !@transactions.empty? %>
        <%= render :partial => @transaction_type, :collection => @transactions, :locals => { :hidden => false } %>
      <% end %>
    </tbody>
  </table>

  <%= will_paginate @transactions %>
</div>
<div class="list_refinement">
  <% form_tag ({ :action => 'search'}, :method => "GET") do %>
    <% filters = {} %>
    <% filters[@default_condition] = date_or_date_range_picker('conditions', @default_condition) %>
    <% if filters['created_at'] == nil %>
      <% filters['created_at'] = date_or_date_range_picker('conditions', 'created_at') %>
    <% end %>
    <% if @model.new.respond_to?( :contact_id ) %>
      <% filters['contact'] =
           contact_field('@conditions', 'contact_id',
             :locals => {:options =>
               {
                 :object_name => 'conditions',
                 :field_name => 'contact_id',
                 :element_prefix => 'filter_contact',
                 :display_edit => false,
                 :display_create => false,
                 :show_label => false,
               },
               :contact => @conditions.contact
             } ) %>
    <% end %>
    <% if @model.new.respond_to?( :postal_code ) %>
      <% filters['anonymous'] = "" %>
    <% end %>
    <% if @model.new.respond_to?( :payments ) %>
      <% filters['payment_method'] = render( :partial => 'payment_method_select',
            :locals => {:field_id_prefix => 'conditions',
                        :field_name_prefix => 'conditions',
                        :show_label => false,
                        :paid_object => @conditions} ) %>
      <% filters['unresolved_invoices'] = "" %>
      <% filters['payment_amount'] = select_visibility(
        'conditions',
        'payment_amount_type',
        [['exact', text_field('conditions', 'payment_amount_exact')],
         ['between', "%s to %s" % [text_field('conditions', 'payment_amount_low'),
                                    text_field('conditions', 'payment_amount_high')]],
         ['>=', text_field('conditions', 'payment_amount_ge')],
         ['<=', text_field('conditions', 'payment_amount_le')],
        ])
      %>
    <% end %>
    <% filters['gizmo_type_id'] = select('conditions', 'gizmo_type_id',
         GizmoType.find(:all).sort_by(&:description).collect(){|x|[x.description, x.id]}) %>
    <% filters['id'] = text_field('conditions', 'id') %>
    <% filters['needs_attention'] = "" %>
    <%= multiselect_of_form_elements('conditions', filters ) %>

    <div class="form-footer">
      <%= submit_tag "Refine", :class => "submit" %>
      <%= loading_indicator_tag("refine_#{@transaction_type}_loading") %>
    </div>
  <% end %>
</div>
<% if @show_wrapper %>
</div>
</div>
<% end %>

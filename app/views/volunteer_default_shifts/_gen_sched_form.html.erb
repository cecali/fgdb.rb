<!-- TODO: this breaks the filter_criteria conditions_html. I don't think it can be used multiple times on a page. needs some refactoring probably. -->
<div class='generate'>
<h3>Generate:</h3>
<% form_tag :action => 'generate', :controller => 'volunteer_default_shifts' do %>
  <p><label for="start_start_date">Start date:</label> <%= calendar_box skedj.opts[:generate_param_key], :start_date, defined?(@start_date) ? {:value => @start_date} : {}  %></p>
  <p><label for="end_end_date">End date:</label> <%= calendar_box skedj.opts[:generate_param_key], :end_date, defined?(@end_date) ? {:value => @end_date} : {} %></p>
  <% params[:gconditions] = params[:conditions] ? params[:conditions].dup : {} %>
  <%= conditions_html('gconditions', ["empty"]) %>
  <% @gconditions = Conditions.new %>
  <% @gconditions.apply_conditions(params[:gconditions]) %>
  <%= conditions_html('gconditions', skedj.opts[:generate_conditions]) if skedj.opts[:generate_conditions] %>
  Resources <%= check_box_tag skedj.opts[:generate_param_key] + "[do_resources]", 1, defined?(@do_resources) ? @do_resources :  true %>
  Shifts <%= check_box_tag skedj.opts[:generate_param_key] + "[do_shifts]", 1, defined?(@do_shifts) ? @do_shifts : true %>
  <% forcing = (defined?(@force_generate) && @force_generate) %>
  <% if forcing %>
    Force Generate <%= check_box_tag skedj.opts[:generate_param_key] + "[force_generate]", 1, true %>
  <% end %>
  <p><%= submit_tag forcing ? "FORCE Generate and OVERWRITE data" : "Generate" %></p>
<% end %>
</div>


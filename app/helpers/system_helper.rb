module SystemHelper
  # this will take over PrintmeHelper soon

  class SystemParser
    attr_reader :processors, :l2_cache, :bios, :usb_supports, :drive_supports
    attr_reader :memories, :harddrives, :opticals, :pcis
    attr_reader :system_model, :system_serial_number, :system_vendor, :mobo_model, :mobo_serial_number, :mobo_vendor, :macaddr
    attr_reader :model, :vendor, :serial_number

    attr_reader :string, :parser, :myparser

    def SystemParser.parse(in_string)
      sp = nil
      parser = Parsers.select{|x| in_string.match(/#{x.match_string}/)}.first or return false
      begin
        sp = parser.new(in_string)
      rescue SystemParserException
        return false
      end
      return sp
    end

    def initialize(in_string)
      @string = in_string
      do_work
    end

    def myparser
      self
    end
  end

  class SystemParserException < Exception
  end

  class LshwSystemParser < SystemParser
    include XmlHelper

    def self.match_string
      "generated by lshw"
    end

    attr_reader :parser # REMOVEME

    def do_work
      @parser = load_xml(@string) or raise SystemParserException
      # this will parse @string, and set @system.memories/etc
    end
  end

  class PlistSystemParser < SystemParser
    def self.match_string
      "DOCTYPE plist"
    end

    def do_work
      raise
    end
  end

  SystemParser::Parsers = [PlistSystemParser, LshwSystemParser]
end
